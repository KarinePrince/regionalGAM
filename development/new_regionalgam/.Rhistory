point <- geom_point(data=gc_f[gc_f$V1==y,],size=1.5, aes(group=rep("T1",y),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
Sys.sleep(2)
}
gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
y
y-7
gc_f=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
gc_f
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
path <- geom_path(size=1, aes(group=rep("T1",y), alpha=V1/(y),color="mediumorchid4"))
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
(y)
V1/(y)
gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
(y-7)
y
V1/(y)
gc_f$V1>=(y-7) & gc_f$V1<=y
gc_f
gc <- gcIntermediate(c(maison$long,maison$lat),c(labo$long,labo$lat),n=6, addStartEnd=TRUE)
gc <- rbind(gc,gcIntermediate(c(labo$long,labo$lat),c(montpellier$long,montpellier$lat),n=6, addStartEnd=TRUE))
gc <- rbind(gc,gcIntermediate(c(montpellier$long,montpellier$lat),c(besancon$long,besancon$lat),n=6, addStartEnd=TRUE))
gc <- rbind(gc,gcIntermediate(c(besancon$long,besancon$lat),c(maison$long,maison$lat),n=6, addStartEnd=TRUE))
gc_f <- cbind(1:dim(gc)[1],gc)
gc_f <- as.data.frame(gc_f)
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
path <- geom_path(size=1, aes(group=rep("T1",y), alpha=V1/(y),color="mediumorchid4"))
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
Sys.sleep(2)
for(y in c(2:dim(gc_f)[1])){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
path <- geom_path(size=1, aes(group=rep("T1",y), alpha=V1/(y),color="mediumorchid4"))
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
Sys.sleep(2)
}
y
for(y in c(2:dim(gc_f)[1])){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
Sys.sleep(2)
}
library(animation)
saveHTML(
for(y in c(2:dim(gc_f)[1])){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
Sys.sleep(2)
}
,img.name = "Rplot")
saveHTML(
for(y in c(2:dim(gc_f)[1])){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if y == dim(gc_f)[1] {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
}
,img.name = "Rplot")
y == dim(gc_f)[1]
y
saveHTML(
for(y in c(2:dim(gc_f)[1])){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y == dim(gc_f)[1]) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
}
,img.name = "Rplot")
maison<-data.frame(lieux="maison",lat=48.883214,long=2.359229)
labo<-data.frame(lieux="labo",lat=48.841802,long=2.360106)
besancon<-data.frame(lieux="besancon",lat=47.2431,long=6.0219)
montpellier <- data.frame(lieux="montpellier",lat=43.6119 ,long=3.8772)
france_map <- map_data("france")
paris <- subset(france_map, region %in% c("Paris"))
gc <- gcIntermediate(c(maison$long,maison$lat),c(labo$long,labo$lat),n=6, addStartEnd=TRUE)
gc <- rbind(gc,gcIntermediate(c(labo$long,labo$lat),c(montpellier$long,montpellier$lat),n=6, addStartEnd=TRUE))
gc <- rbind(gc,gcIntermediate(c(montpellier$long,montpellier$lat),c(besancon$long,besancon$lat),n=6, addStartEnd=TRUE))
gc <- rbind(gc,gcIntermediate(c(besancon$long,besancon$lat),c(maison$long,maison$lat),n=6, addStartEnd=TRUE))
gc_f <- cbind(1:dim(gc)[1],gc)
gc_f <- as.data.frame(gc_f)
saveHTML(
for(y in c(2:dim(gc_f)[1])){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y < 8) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
}
,img.name = "Rplot")
saveHTML(
for(y in c(2:dim(gc_f)[1])){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y < 9) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
}
,img.name = "Rplot")
paris <- get_map(location = "paris")
install.packages("ggmap")
paris <- qmap(location = "paris")
library(ggmap)
paris <- qmap(location = "paris")
print(p+paris+path+point+ylab("")+xlab("")+scale_color_identity() +th)
paris
paris <- qmap(location = "paris",zoom=14)
paris
paris <- qmap(location = "paris",zoom=10)
paris
paris <- qmap(location = "paris",zoom=13)
paris
ggmap(paris, extent = "normal",zoom=13)
ggmap('paris', extent = "normal",zoom=13)
ggmap(paris, extent = "normal")
ggmap('paris', extent = "normal")
print(paris+p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
paris <- qmap(location = "paris",extent = "normal",zoom=13)
print(paris+p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
str(paris)
p <- ggplot(paris, aes(y=lat,x=lon))
p <- ggplot(paris, aes(y=lat,x=lon))
p <- ggmap(paris, aes(y=lat,x=lon))
paris <- get_map(location = "paris",extent = "normal",zoom=13)
paris <- get_map("paris",zoom=13)
parisMap <- ggmap("paris", extent = "device", legend = "topleft")
parisMap <- ggmap(paris, extent = "device", legend = "topleft")
print(p+parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
parisMap + path
parisMap + p+ path
parismap<-qmap('paris', extent = "normal")
print(parismap+p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
print(parismap+pol+point+ylab("")+xlab("")+scale_color_identity() +th)
print(parismap+point+ylab("")+xlab("")+scale_color_identity() +th)
print(parismap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
V1 <- gc_n$V1
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
print(parismap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
V1
path
rep("T1",dim(gc_n)[1])
rep("T1",y-1)
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",dim(gc_n)[1]),color="mediumorchid4"))
print(parismap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggmap(paris, aes(y=lat,x=lon))
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y < 9) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y == dim(gc_f)[1]) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
parisMap <- ggmap(paris, extent = "device", legend = "topleft")
parisMap
print(parisMap+p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
print(p+pol+parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
print(p+parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
print(qmap(paris, extent = "device")p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
print(qmap(paris, extent = "device")+p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
print(qmap('paris', extent = "device")+p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
parisMap+point
y=2
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y == dim(gc_f)[1]) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=1.5, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
parisMap+point
point
gc_n[gc_n$V1==y,]
parisMap <- ggmap(paris, zoom=13)
parisMap+point
point <- geom_point(data=gc_n[gc_n$V1==y,],size=7, aes(group=rep("T1",y-1),color="mediumorchid4"))
parisMap+point
parisMap+point+path
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
path
V1 <-gc_n$V1
parisMap+point+path
V1
y
rep("T1",dim(gc_n)[1])
path <- geom_path(size=1, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
parisMap+point+path
V1/(y)
rep("T1",dim(gc_n)[1])
gc_n[gc_n$V1==y,]
rep("T1",y-1)
parisMap+path+point
print(p+pol+path+point+ylab("")+xlab("")+scale_color_identity() +th)
parisMap+pol+path+point
gc_n
gc_n
path <- geom_path(aes(x=lon, y=lat, alpha=V1/(y),color="mediumorchid4")), data=gc_n)
path <- geom_path(aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
parisMap+point+path
y
y=4
parisMap+point+path
path <- geom_path(aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
parisMap+point+path
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
path <- geom_path(aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
parisMap+point+path
path <- geom_path(size=3, aes(group=rep("T1",dim(gc_n)[1]), alpha=V1/(y),color="mediumorchid4"))
path <- geom_path(size=3,aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
parisMap+point+path
point <- geom_point(data=gc_n[gc_n$V1==y,],size=7, aes(group=rep("T1",y-1),color="mediumorchid4"))
parisMap+point+path
print(parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
path <- geom_path(size=2*V1/y,aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
print(parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
(2*V1)/y
path <- geom_path(size=(2*V1)/y,aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
print(parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
path <- geom_path(size=2,aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
for(y in c(2:8)){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
V1 <-gc_n$V1
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=2,aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y == dim(gc_f)[1]) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=7, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
}
aveHTML(
for(y in c(2:8)){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
V1 <-gc_n$V1
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=2,aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y == dim(gc_f)[1]) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=7, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
}
,img.name = "Rplot")
saveHTML(
for(y in c(2:8)){
gc_n=gc_f[gc_f$V1>=(y-7) & gc_f$V1<=y,]
V1 <-gc_n$V1
p <- ggplot(gc_n, aes(y=lat,x=lon))
path <- geom_path(size=2,aes(x=lon, y=lat, alpha=V1/y, color="mediumorchid4"), data=gc_n)
pol <- geom_polygon(data=france_map, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )
if (y == dim(gc_f)[1]) {pol <- geom_polygon(data=paris, aes(x=long, y=lat, group = group),colour="white", fill="lightgoldenrodyellow" )}
point <- geom_point(data=gc_n[gc_n$V1==y,],size=7, aes(group=rep("T1",y-1),color="mediumorchid4"))
th <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),
axis.ticks = element_blank(), axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.position = "none")
print(parisMap+path+point+ylab("")+xlab("")+scale_color_identity() +th)
}
,img.name = "Rplot")
load("~/Desktop/jagsoutput2.Rdata")
ls()
str(out2)
names(out2$BUGSoutput$sims.array)
str(out2$BUGSoutput$sims.array)
out2$BUGSoutput$sims.array[1,1,]
str(out2$BUGSoutput$sims.array)
names(out2$BUGSoutput$sims.array[1,1,])
str(out2$BUGSoutput$sims.array)
plot(out2$BUGSoutput$sims.array[1:1000,1,1])
plot(out2$BUGSoutput$sims.array[1:1000,2,1])
plot(out2$BUGSoutput$sims.array[1:1000,1,1])
plot(out2$BUGSoutput$sims.array[1:1000,2,1],col="red",add=T)
plot(out2$BUGSoutput$sims.array[1:1000,1,1])
points(1:1000,out2$BUGSoutput$sims.array[1:1000,2,1],col="red")
points(1:1000,out2$BUGSoutput$sims.array[1:1000,3,1],col="blue")
plot(out2$BUGSoutput$sims.array[1:1000,1,2])
points(1:1000,out2$BUGSoutput$sims.array[1:1000,3,2],col="blue")
points(1:1000,out2$BUGSoutput$sims.array[1:1000,1,2],col="blue")
points(1:1000,out2$BUGSoutput$sims.array[1:1000,2,1],col="red")
names(out2$BUGSoutput)
out2$BUGSoutput$sims.array[1,1,1]
out2$BUGSoutput$sims.list[1,1,1]
out2$BUGSoutput$sims.list[1,1]
out2$BUGSoutput$sims.list$alpha.p[[1]]
out2$BUGSoutput$sims.list$alpha.p[[2]]
out2$BUGSoutput$sims.list$alpha.p[[3]]
out2$BUGSoutput$sims.array[1000,1,1]
install_github("RetoSchmucki/Rpackages/climateExtract")
library(devtools)
install_github("RetoSchmucki/Rpackages/climateExtract")
@
library(climateExtract)
library(climateExtract)
library(climateExtract)
library('R2jags')
source('~/.active-rstudio-document', echo=TRUE)
library('R2jags')
knit_with_parameters('~/OneDrive - NERC/WessexLULCchange/doc/landUseChangePaper.Rmd')
source('~/OneDrive - NERC/regionalGAM/development/new_functions.r', echo=TRUE)
ls()
ls(list=ls())
rm(list=ls())
source('~/OneDrive - NERC/regionalGAM/development/new_functions.r', echo=TRUE)
getwd()
setwd("~/OneDrive - NERC/regionalGAM/development")
m_visit <- data.table::fread("m_visit.csv",header=TRUE)
m_count <- data.table::fread("m_count.csv",header=TRUE)
m_visit <- data.table::data.table(m_visit)
m_count <- data.table::data.table(m_count)
ts_date <- ts_dwmy_table(InitYear=2000,LastYear=2005,WeekDay1='monday')
ts_season <- ts_monit_season(ts_date,StartMonth=4,EndMonth=9,StartDay=1,EndDay=NULL,CompltSeason=TRUE,Anchor=TRUE,AnchorLength=7,AnchorLag=7)
m_visit <- df_visit_season(m_visit,ts_season)
ts_season_visit <- ts_monit_site(ts_season,m_visit)
m_count[order(SPECIES),unique(SPECIES)]
ts_season_count <- ts_monit_count_site(ts_season_visit,m_count,sp=4)
ts_flight_curve <- flight_curve(ts_season_count,NbrSample=100,MinVisit=3,MinOccur=2,MinNbrSite=1,MaxTrial=3,FcMethod='regionalGAM',GamFamily='poisson',CompltSeason=TRUE)
plot(ts_flight_curve[M_YEAR==2000,trimDAYNO],ts_flight_curve[M_YEAR==2000,NM],type='l')
c <- 2
for(y in 2001:2005){
points(ts_flight_curve[M_YEAR==y,trimDAYNO],ts_flight_curve[M_YEAR==y,NM],type='l',col=c)
c <- c + 1
}
plot(ts_flight_curve[M_YEAR==2000,trimDAYNO],ts_flight_curve[M_YEAR==2000,NM],type='l',xlab='Monitoring Year Day',ylab='Relative Abundance')
c <- 2
for(y in 2001:2005){
points(ts_flight_curve[M_YEAR==y,trimDAYNO],ts_flight_curve[M_YEAR==y,NM],type='l',col=c)
c <- c + 1
}
site_year_sp_count <- impute_count(ts_season_count,ts_flight_curve)
butterfly_index <- butterfly_day(site_year_sp_count)
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2011,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2011,FITTED],ylim=c(0,5),main='Season 2011-2012')
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,FITTED],ylim=c(0,5),main='Season 2003')
points(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,COUNT_IMPUTED],col='red')
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,FITTED],ylim=c(0,5),col='blue',type='l',main='Season 2003',)
points(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,COUNT],col='red')
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,FITTED],ylim=c(0,5),col='blue',type='l',main='Season 2003',xlab='Monitoring Month',ylab='Fitted Count')
points(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,COUNT],col='red',)
points(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,COUNT],col='red')
plot(butterfly_index[SITE_ID==site,M_YEAR],butterfly_index[SITE_ID==site,BUTTERFLY_DAY],main=paste("SITE:",site),xlab='Monitoring Year',ylab='Butterfly Days')
for(site in butterfly_index[,unique(SITE_ID)]){
plot(butterfly_index[SITE_ID==site,M_YEAR],butterfly_index[SITE_ID==site,BUTTERFLY_DAY],main=paste("SITE:",site),xlab='Monitoring Year',ylab='Butterfly Days')
Sys.sleep(0.5)
}
m_visit[unique(SITE_ID),.N]
rm(list=ls())
m_visit <- data.table::fread("m_visit.csv",header=TRUE)
m_count <- data.table::fread("m_count.csv",header=TRUE)
m_visit <- data.table::data.table(m_visit)
m_count <- data.table::data.table(m_count)
ts_date <- ts_dwmy_table(InitYear=2000,LastYear=2005,WeekDay1='monday')
ts_season <- ts_monit_season(ts_date,StartMonth=11,EndMonth=8,StartDay=1,EndDay=NULL,CompltSeason=TRUE,Anchor=TRUE,AnchorLength=7,AnchorLag=7)
source('~/OneDrive - NERC/regionalGAM/development/new_functions.r', echo=TRUE)
m_visit <- data.table::fread("m_visit.csv",header=TRUE)
m_visit <- data.table::fread("m_visit.csv",header=TRUE)
m_count <- data.table::fread("m_count.csv",header=TRUE)
m_visit <- data.table::data.table(m_visit)
m_count <- data.table::data.table(m_count)
ts_date <- ts_dwmy_table(InitYear=2000,LastYear=2005,WeekDay1='monday')
ts_season <- ts_monit_season(ts_date,StartMonth=11,EndMonth=8,StartDay=1,EndDay=NULL,CompltSeason=TRUE,Anchor=TRUE,AnchorLength=7,AnchorLag=7)
m_visit <- df_visit_season(m_visit,ts_season)
ts_season_visit <- ts_monit_site(ts_season,m_visit)
m_count[order(SPECIES),unique(SPECIES)]
ts_season_count <- ts_monit_count_site(ts_season_visit,m_count,sp=2)
ts_flight_curve <- flight_curve(ts_season_count,NbrSample=100,MinVisit=3,MinOccur=2,MinNbrSite=1,MaxTrial=3,FcMethod='regionalGAM',GamFamily='poisson',CompltSeason=TRUE)
plot(ts_flight_curve[M_YEAR==2000,trimDAYNO],ts_flight_curve[M_YEAR==2000,NM],type='l',xlab='Monitoring Year Day',ylab='Relative Abundance')
c <- 2
for(y in 2001:2005){
points(ts_flight_curve[M_YEAR==y,trimDAYNO],ts_flight_curve[M_YEAR==y,NM],type='l',col=c)
c <- c + 1
}
site_year_sp_count <- impute_count(ts_season_count,ts_flight_curve)
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,FITTED],ylim=c(0,5),col='blue',type='l',main='Season 2003',xlab='Monitoring Month',ylab='Fitted Count')
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,FITTED],col='blue',type='l',main='Season 2003',xlab='Monitoring Month',ylab='Fitted Count')
points(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,COUNT],col='red')
butterfly_index <- butterfly_day(site_year_sp_count)
for(site in butterfly_index[,unique(SITE_ID)]){
plot(butterfly_index[SITE_ID==site,M_YEAR],butterfly_index[SITE_ID==site,BUTTERFLY_DAY],main=paste("SITE:",site),xlab='Monitoring Year',ylab='Butterfly Days')
Sys.sleep(0.5)
}
rm(list=ls())
source('~/OneDrive - NERC/regionalGAM/development/new_regionalgam/new_regionalgam_functions.R', echo=TRUE)
setwd("~/OneDrive - NERC/regionalGAM/development/new_regionalgam")
m_visit <- data.table::fread("m_visit.csv",header=TRUE)
m_count <- data.table::fread("m_count.csv",header=TRUE)
m_visit <- data.table::data.table(m_visit)
m_count <- data.table::data.table(m_count)
ts_date <- ts_dwmy_table(InitYear=2000,LastYear=2005,WeekDay1='monday')
ts_season <- ts_monit_season(ts_date,StartMonth=11,EndMonth=8,StartDay=1,EndDay=NULL,CompltSeason=TRUE,Anchor=TRUE,AnchorLength=7,AnchorLag=7)
m_visit <- df_visit_season(m_visit,ts_season)
ts_date <- ts_dwmy_table(InitYear=2000,LastYear=2000,WeekDay1='monday')
ts_season <- ts_monit_season(ts_date,StartMonth=4,EndMonth=9,StartDay=1,EndDay=NULL,CompltSeason=TRUE,Anchor=TRUE,AnchorLength=7,AnchorLag=7)
m_visit <- df_visit_season(m_visit,ts_season)
ts_season_visit <- ts_monit_site(ts_season,m_visit)
m_count[order(SPECIES),unique(SPECIES)]
ts_season_count <- ts_monit_count_site(ts_season_visit,m_count,sp=2)
ts_flight_curve <- flight_curve(ts_season_count,NbrSample=100,MinVisit=3,MinOccur=2,MinNbrSite=1,MaxTrial=3,FcMethod='regionalGAM',GamFamily='poisson',CompltSeason=TRUE)
plot(ts_flight_curve[M_YEAR==2000,trimDAYNO],ts_flight_curve[M_YEAR==2000,NM],type='l',xlab='Monitoring Year Day',ylab='Relative Abundance')
c <- 2
for(y in 2001:2005){
points(ts_flight_curve[M_YEAR==y,trimDAYNO],ts_flight_curve[M_YEAR==y,NM],type='l',col=c)
c <- c + 1
}
site_year_sp_count <- impute_count(ts_season_count,ts_flight_curve)
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2003,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2003,FITTED],col='blue',type='l',main='Season 2003',xlab='Monitoring Month',ylab='Fitted Count')
ds
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2000,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2000,FITTED],col='blue',type='l',main='Season 2003',xlab='Monitoring Month',ylab='Fitted Count')
points(site_year_sp_count[SITE_ID==1 & M_YEAR==2000,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2000,COUNT],col='red')
ts_season_count <- ts_monit_count_site(ts_season_visit,m_count,sp=4)
ts_flight_curve <- flight_curve(ts_season_count,NbrSample=100,MinVisit=3,MinOccur=2,MinNbrSite=1,MaxTrial=3,FcMethod='regionalGAM',GamFamily='poisson',CompltSeason=TRUE)
plot(ts_flight_curve[M_YEAR==2000,trimDAYNO],ts_flight_curve[M_YEAR==2000,NM],type='l',xlab='Monitoring Year Day',ylab='Relative Abundance')
c <- 2
for(y in 2001:2005){
points(ts_flight_curve[M_YEAR==y,trimDAYNO],ts_flight_curve[M_YEAR==y,NM],type='l',col=c)
c <- c + 1
}
site_year_sp_count <- impute_count(ts_season_count,ts_flight_curve)
plot(site_year_sp_count[SITE_ID==1 & M_YEAR==2000,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2000,FITTED],col='blue',type='l',main='Season 2003',xlab='Monitoring Month',ylab='Fitted Count')
points(site_year_sp_count[SITE_ID==1 & M_YEAR==2000,DATE],site_year_sp_count[SITE_ID==1 & M_YEAR==2000,COUNT],col='red')
butterfly_index <- butterfly_day(site_year_sp_count)
for(site in butterfly_index[,unique(SITE_ID)]){
plot(butterfly_index[SITE_ID==site,M_YEAR],butterfly_index[SITE_ID==site,BUTTERFLY_DAY],main=paste("SITE:",site),xlab='Monitoring Year',ylab='Butterfly Days')
Sys.sleep(0.5)
}
